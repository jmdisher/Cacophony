<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project basedir="." default="all" name="Cacophony">

	<property name="version" value="EXPERIMENTAL"/>

	<property name="dir.global.workspace" value="."/>
	<property name="dir.global.build" value="${dir.global.workspace}/build"/>
	<property name="dir.global.build.main" value="${dir.global.build}/main"/>
	<property name="dir.global.build.test" value="${dir.global.build}/test"/>
	<property name="dir.global.build.testreports" value="${dir.global.build}/testreports" />
	<property name="dir.global.src.test" value="${dir.global.workspace}/test"/>
	<property name="dir.global.src.main" value="${dir.global.workspace}/src"/>
	<property name="dir.global.lib" value="${dir.global.workspace}/lib"/>
	<property name="dir.global.dist" value="${dir.global.workspace}/dist-${version}"/>
	<property name="junit.heap" value="32m"/>
	<property name="junit.threads" value="4"/>

	<!-- Set this property to run a specific test. -->
	<property name="unit.test" value="Test*" />

	<path id="buildClasspath">
		<fileset dir="${dir.global.lib}">
			<include name="*.jar"/>
		</fileset>
	</path>
	<path id="testingClasspath">
		<fileset dir="${dir.global.lib}">
			<include name="*.jar"/>
		</fileset>
		<fileset dir="${dir.global.build}">
			<include name="${ant.project.name}.jar"/>
		</fileset>
	</path>

	<target name="all" >
		<antcall target="generate_version" />
		<antcall target="clean" />
		<antcall target="build_main" />
		<antcall target="build_test" />
		<antcall target="test" />
	</target>

	<target name="generate_version" >
		<echo>Using version ${version} for build.</echo>
		<exec executable="${dir.global.workspace}/src/generate_version_file.sh" output="${dir.global.workspace}/src/com/jeffdisher/cacophony/utils/Version.java">
			<arg value="${version}" />
		</exec>
	</target>

	<target name="clean" >
		<antcall target="clean_main" />
		<antcall target="clean_test" />
	</target>

	<target name="clean_main">
		<delete dir="${dir.global.build.main}"/>
		<delete file="${dir.global.build}/${ant.project.name}.jar"/>
	</target>

	<target name="build_main">
		<echo message="Building ${ant.project.name}..."/>

		<mkdir dir="${dir.global.build.main}"/>
		<javac debug="true" classpathref="buildClasspath" debuglevel="source,lines,vars" includeantruntime="false" release="16" srcdir="${dir.global.src.main}" destdir="${dir.global.build.main}" includes="**/*.java">
		</javac>

		<jar destfile="${dir.global.build}/${ant.project.name}.jar">
			<fileset dir="${dir.global.build.main}" includes="**/*.class">
			</fileset>
			<fileset dir="${dir.global.workspace}" includes="**/*.xsd">
			</fileset>
			<fileset dir="${dir.global.workspace}" includes="resources/**">
			</fileset>
			<manifest>
				<attribute name="Main-Class" value="com.jeffdisher.cacophony.Cacophony"/>
				<attribute name="Class-Path" value="lib/cid.jar lib/ipfs.jar lib/istack-commons-runtime.jar lib/javax.activation-api.jar lib/jaxb-api.jar lib/jaxb-runtime.jar lib/multihash.jar lib/multiaddr.jar lib/multibase.jar lib/minimal-json-0.9.5.jar lib/rest-server-0.3.1-jar-with-dependencies.jar lib/slf4j-nop-2.0.6.jar"/>
			</manifest>
		</jar>
	</target>

	<target name="clean_test">
		<delete dir="${dir.global.build.test}"/>
		<delete dir="${dir.global.testreports}"/>
	</target>

	<target name="build_test" depends="build_main">
		<echo message="Building tests for ${ant.project.name}..."/>

		<mkdir dir="${dir.global.build.test}"/>
		<javac debug="true" classpathref="testingClasspath" debuglevel="source,lines,vars" includeantruntime="false" release="16" srcdir="${dir.global.src.test}" destdir="${dir.global.build.test}" includes="**/*.java">
		</javac>
	</target>

	<target name="test" depends="build_test">
		<mkdir dir="${dir.global.build.testreports}" />
		<junit printsummary="on" haltonfailure="true" fork="true" maxmemory="${junit.heap}" threads="${junit.threads}" dir="${dir.global.workspace}">
			<classpath>
				<fileset dir="${dir.global.lib}">
					<include name="*.jar"/>
				</fileset>
				<pathelement location="${dir.global.build}/${ant.project.name}.jar"/>
				<pathelement location="${dir.global.build.test}" />
			</classpath>
			<formatter type="plain" usefile="false" />
			<formatter type="xml" />
			<batchtest todir="${dir.global.build.testreports}">
				<fileset dir="${dir.global.src.test}" includes="**/${unit.test}.java" />
			</batchtest>
		</junit>
	</target>

	<target name="dist">
		<antcall target="generate_version" />
		<antcall target="clean" />
		<antcall target="build_main" />
		<antcall target="package_dist" />
	</target>

	<target name="package_dist" depends="build_main">
		<echo message="Packaging distribution.zip for Cacophony ${version} (override with -Dversion=VERSION)..." />

		<delete dir="${dir.global.dist}" failonerror="false" />
		<mkdir dir="${dir.global.dist}" />
		<mkdir dir="${dir.global.dist}/lib" />
		
		<copy todir="${dir.global.dist}">
			<fileset dir="${dir.global.build}">
				<include name="${ant.project.name}.jar" />
			</fileset>
		</copy>
		<copy todir="${dir.global.dist}/lib">
			<fileset dir="${dir.global.lib}">
				<include name="cid.jar" />
				<include name="ipfs.jar" />
				<include name="istack-commons-runtime.jar" />
				<include name="javax.activation-api.jar" />
				<include name="jaxb-api.jar" />
				<include name="jaxb-runtime.jar" />
				<include name="minimal-json-0.9.5.jar" />
				<include name="multiaddr.jar" />
				<include name="multibase.jar" />
				<include name="rest-server-0.3.1-jar-with-dependencies.jar" />
				<include name="multihash.jar" />
				<include name="slf4j-nop-2.0.6.jar" />
			</fileset>
		</copy>
		
		<!-- We want the dist file to include the container directory -->
		<zip
			destfile="Cacophony-${version}.zip"
			basedir="${dir.global.dist}"
			excludes="**"
			update="true"
		>
			<zipfileset dir="${dir.global.dist}" prefix="Cacophony-${version}"/>
		</zip>
	</target>

</project>

